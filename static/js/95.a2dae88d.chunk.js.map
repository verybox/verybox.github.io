{"version":3,"file":"static/js/95.a2dae88d.chunk.js","mappings":"oOAgBA,SAASA,EAAeC,GACtB,OAAO,SAAC,IAAK,IAAKA,EAAOC,UAAU,SACrC,CAEe,SAASC,EAAUF,GAChC,MAAMG,GAAQC,EAAAA,EAAAA,MACPC,EAAWC,GAAgBC,EAAAA,SAAe,KAC1CC,EAAMC,GAAWF,EAAAA,UAAe,IAChCG,EAAaC,GAAkBJ,EAAAA,cAAeK,IAC9CC,EAAYC,GAAiBP,EAAAA,cAAeK,GAEnDL,EAAAA,WAAgB,KACdO,GAAc,IAAMf,IAChBM,EAAUU,SAAWL,GAEvBC,EAAe,IAAKN,EAAU,KAC9BC,GAAcU,GAASA,EAAKC,MAAM,KAClCR,GAAQ,IACCJ,EAAUU,QAAUL,GAAeF,GAE5CC,GAAQ,EACV,GACC,CAACJ,EAAWK,EAAaF,IAE5B,MAIMU,EAAc,CAACC,EAAOC,KACX,cAAXA,GAGJX,GAAQ,EAAM,EAYhB,OALAF,EAAAA,WAAgB,KAEdD,GAAcU,GAAS,IAAIA,EAAM,CAAEK,QAAQrB,EAAMsB,IAAKC,KAAK,IAAIC,MAAOC,aAAa,GAClF,KAGD,gBAAKC,MAAO,CAACC,WAAYxB,EAAMyB,QAAQC,UAAUC,MAAM,UACrD,SAAC,IAAQ,CAEPtB,KAAMA,EACNuB,iBAAkB,IAClBC,QAASd,EACTe,oBAAqBpB,EACrBqB,gBAAiB,CAAEC,SAjBJ,KACnBxB,OAAeC,EAAU,GAiBrBS,QAASX,EAAcA,EAAYW,aAAUT,EAC7CwB,QACE,SAAC,WAAc,WACb,SAAC,IAAU,CACT,aAAW,QACXC,MAAM,UACNC,GAAI,CAAEC,EAAG,IACTC,QAAStB,EAAY,UAErB,SAAC,IAAS,SAfXR,EAAcA,EAAYa,SAAMX,IAsB7C,C,4HC9EA,MAAM6B,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,QAAC,MAAEvC,GAAO,QAAM,CAChD,oBAAqB,CACnByC,gBAAiB,UACjBP,MAAO,UACPQ,UAAY,aAAY1C,EAAMyB,QAAQD,WAAWmB,QACjD,WAAY,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,UAAW,mCACXC,OAAQ,yBACRC,QAAS,OAGb,oBAAqB,CACnB,KAAM,CACJC,UAAW,YACXC,QAAS,GAEX,OAAQ,CACND,UAAW,aACXC,QAAS,IAGd,KAEmBf,EAAAA,EAAAA,IAAOgB,EAAAA,EAAPhB,EAAe,QAAC,MAAEvC,GAAO,QAAM,CACjD+C,MAAO,GACPC,OAAQ,GACRG,OAAS,aAAYnD,EAAMyB,QAAQD,WAAWmB,QAC/C,IAEc,SAASa,IACtB,OACE,SAAC,IAAK,CAAC1D,UAAU,MAAM2D,QAAS,EAAE,UAChC,SAACnB,EAAW,CACVoB,QAAQ,WACRC,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,QAAQ,SAKhB,C,8JCpCe,SAASC,EAAOlE,GAC7B,MAAM,EAAEmE,IAAMC,EAAAA,EAAAA,MACPC,EAAKC,IAAUC,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,MACxBC,EAAgBC,IAAqBH,EAAAA,EAAAA,UAAS,CACnDI,QAAO,EACPrD,IAAI,KAyBN,OACE,UAAC,KAAI,CAACsD,WAAS,EAAChB,QAAS,EAAE,WACzB,SAAC,KAAI,CAACiB,MAAI,EAACC,GAAI,GAAIC,GAAK,EAAE,UACxB,SAAC,IAAS,CACRC,WAAS,EACTC,GAAG,MACHC,MAAOf,EAAE,eACTF,QAAQ,WACRkB,KAAK,QACLC,MAAOf,EACPgB,SAhCclE,IACpBmD,EAAOnD,EAAMmE,OAAOF,MAAM,OAkCxB,UAAC,KAAI,CAACP,MAAI,EAACC,GAAI,GAAKC,GAAK,EAAE,WACzB,SAAC,IAAM,CAACd,QAAQ,YAAazB,QAhCX,MAEtB+C,EAAAA,EAAAA,GAASlB,GAAKmB,MAAMC,IAEA,GAAhBA,GACFzF,EAAMoC,OAAOsD,gBAAgB,CAACC,WAAU,EAAMtB,IAAIA,EAAI/C,IAAK,GAAE6C,EAAE,6BAC/DO,EAAkB,CAACC,QAAO,EAAKrD,IAAK,GAAE6C,EAAE,+BAExCnE,EAAMoC,OAAOsD,gBAAgB,CAACC,WAAU,EAAKtB,IAAIA,EAAI/C,IAAK,GAAE6C,EAAE,+BAA+BsB,SAC7Ff,EAAkB,CAACC,QAAO,EAAKrD,IAAK,GAAE6C,EAAE,+BAA+BsB,SACxE,GACC,EAqBwD,SAAEtB,EAAE,qBAC1D,SAAC,IAAM,CAACF,QAAQ,WAAWzB,QAnBhB,KACf8B,EAAO,GAAG,EAkByCsB,SAAmB,IAAPvB,EAAW3C,MAAO,CAACmE,WAAW,GAAG,SAAE1B,EAAE,sBAGlG,SAAC,KAAI,CAACU,MAAI,EAACC,GAAI,GAA6BpD,MAAO,CAACoE,QAASrB,EAAeE,OAAS,IAAM,QAAS,UAClG,SAAC,IAAS,CAACrD,IAAOmD,EAAenD,OADXmD,EAAenD,OAK7C,C,uEC9DA,MAAMyE,EAAQC,EAAAA,OAAAA,QAGdC,eAAeC,EAAeC,EAAOC,GACnC,MAAMC,EAAc7B,EAAAA,GACpB,IAEE,MAAM8B,QAAoBP,EAAMQ,IAAIF,EAAY,CAC5CG,OAAO,CAGLC,QAASL,KAIdZ,MAAK,SAAUkB,GAGd,OAAOA,EAASC,KAAKC,MACvB,IACCC,OAAM,SAAUC,GAGjB,IAGoBC,KAAKC,MAAMV,GAC/B,OAAOA,CAGT,CAFC,MAAMW,GACL,OAAO,CACT,CACF,C,wDCtCA,MAAMC,EAAOlB,EAAQ,OACN,SAAST,EAASlB,GAC7B,MAAM8C,EAAO,IAAID,EAAK,IAAIA,EAAKE,UAAUC,aAAahD,IAChDiD,EAAY9F,KAAK+F,MAQvB,OANeJ,EAAKK,IAAIC,aAAajC,MAAMyB,GAClCzF,KAAK+F,MAAQD,IAErBT,OAAOI,IACG,GAGf,C,oBCXAS,EAAOC,QAAWR,IAEhB,MAAMS,EAAcC,IAClB,IAAIC,EAAS,GACb,MAAMC,EAAWF,EAAM9G,OACvB,IAAIiH,EAAW,EACXC,EAAW,GACXC,EAAW,EAQf,IANAJ,EAAO,GAAID,EAAM5G,MAAM,EAAE,IAEzB+G,GAAY,GACZC,EAAW,GACXC,IAEMF,EAAWD,GACfD,EAAOI,GAAWL,EAAM5G,MAAM+G,EAASA,EAJ9B,IAKTA,GALS,GAMTE,IAKF,OAAOJ,CAAM,EAGTK,EAAeC,IACnB,GAAGA,EAAIrH,OAAO,GACNqH,EAAI,IAAIC,OAAO,GAAGD,EAAIrH,QAAQqH,EAEtC,GAAGA,EAAIrH,OAAO,GACNqH,EAAIA,EAAInH,MAAM,EAAE,IAExB,OAAOmH,CAAG,EAGJE,EAAU,CAACC,EAAGC,KAEhB,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAWzH,OAAQ0H,IAClC,OAAOD,EAAWC,GAAGrG,QACjB,IAAK,cACH,GAAGoG,EAAWC,GAAGhC,SAAW8B,EAAGG,KAAKC,cAAe,MAAO,CAAEvG,OAAO,eACnE,MACF,IAAK,aACH,GAAGoG,EAAWC,GAAGhC,SAAW8B,EAAGK,GAAGD,cAAe,MAAQ,CAAEvG,OAAO,cAClE,MACF,IAAK,gBACH,GAAIoG,EAAWC,GAAGhC,SAAW8B,EAAGG,KAAKC,eAAiBH,EAAWC,GAAGI,iBAAmBN,EAAGK,GAAGD,eACxFJ,EAAGV,MAAM,CAEV,GADeD,EAAWW,EAAGV,OAClB,GAAK,aAAe,MAAO,CAAEzF,OAAO,gBACjD,CAEF,MACF,IAAK,eACH,GAAIoG,EAAWC,GAAGI,iBAAmBN,EAAGK,GAAGD,eACtCJ,EAAGV,MAAM,CACV,MAAMC,EAASF,EAAWW,EAAGV,OAC7B,GAAIC,EAAO,GAAqBA,EAAO,GAAGa,eAAiBR,EAAYK,EAAWC,GAAGhC,QAAQxF,MAAM,IAAK,MAAQ,CAAEmB,OAAO,eAC3H,CAEF,MACF,IAAK,cACD,GAAIoG,EAAWC,GAAGhC,SAAW8B,EAAGG,KAAKC,eAAiBH,EAAWC,GAAGI,iBAAmBN,EAAGK,GAAGD,eACtFJ,EAAGV,MAAM,CACV,MAAMC,EAASF,EAAWW,EAAGV,OAC7B,GAAIC,EAAO,GAAuBA,EAAO,GAAGa,eAAiBR,EAAYK,EAAWC,GAAGhC,QAAQxF,MAAM,IACnG,MAAS,CAAEmB,OAAO,cAEtB,CAEN,MACF,IAAK,aACDoG,EAAWC,GAAGI,gBAAmBN,EAAGK,GAAGD,cAGzC,MACF,IAAK,qBACH,GAAGH,EAAWC,GAAGhC,SAAW8B,EAAGG,KAAKC,eAAiBH,EAAWC,GAAGI,iBAAmBN,EAAGK,GAAGD,cAAe,MAAO,CAAEvG,OAAO,sBAC3H,MACF,IAAK,kBACH,GAAGoG,EAAWC,GAAGhC,SAAW8B,EAAGK,GAAGD,cAAe,MAAO,CAAEvG,OAAO,mBACjE,MACF,IAAK,aACH,GAAGoG,EAAWC,GAAGhC,SAAW8B,EAAGG,KAAKC,eAAiBH,EAAWC,GAAGhC,SAAW8B,EAAGK,GAAGD,cAAe,MAAQ,CAAEvG,OAAO,cACpH,GAAGmG,EAAGV,MAAM,CAGV,GAFeD,EAAWW,EAAGV,OACAiB,KAAK7B,GAAKA,EAAE0B,gBACxBI,SAASZ,EAAYK,EAAWC,GAAGhC,QAAQxF,MAAM,KAAO,MAAQ,CAAEmB,OAAO,aAC5F,CACA,MACF,QACE,OAAO,EAEjB,EAKJ,MAAO,CACL4G,eAAgB/C,UACV,MAAMgD,EAAgBC,EAASJ,KAAKK,GAAWA,EAAQR,gBACvD,IAAIS,QAAcjC,EAAKK,IAAI6B,SAAS,UAAS,GAE7C,GAAID,GAASA,EAAME,aAEf,IAAK,IAAIf,KAAMa,EAAME,aAAc,CAC/B,IAAIC,QAAoBpC,EAAKK,IAAIgC,eAAejB,GAC7CgB,EAAYb,MACTO,EAAcF,SAASQ,EAAYb,KAAKC,cAKlD,CAEJ,OAAO,CAAC,EAEZc,YAAaxD,MAAOyD,EAAOC,EAAKT,KAC5B,MAAMD,EAAgBC,EAASJ,KAAKK,GAAWA,EAAQR,gBACvD,IAAK,IAAIF,EAAIiB,EAAOjB,EAAIkB,EAAKlB,IAAK,CAC9B,IAAIW,QAAcjC,EAAKK,IAAI6B,SAASZ,GAEpC,GAAIW,GAASA,EAAME,aACf,IAAK,IAAIf,KAAMa,EAAME,aAAc,CAC/B,IAAIC,QAAoBpC,EAAKK,IAAIgC,eAAejB,GAC5CU,EAAcF,SAASQ,EAAYb,KAAKC,cAIhD,CAER,GAGJiB,wBAAyB3D,MAAOiD,EAASW,KACrC,MAAMZ,EAAgBC,EAASJ,KAAKK,GAAWA,EAAQR,gBACjDmB,EAAeD,EAAQf,KAAKiB,GAAUA,EAAOpB,cAAc1H,MAAM,EAAE,MAEzE,IAAI+I,EAAmB,GACnBZ,QAAcjC,EAAKK,IAAI6B,SAAS,UAAS,GAE7C,GAAID,GAASA,EAAME,aAEf,IAAK,IAAIf,KAAMa,EAAME,aACdf,EAAGK,IACEK,EAAcF,SAASR,EAAGK,GAAGD,iBAIH,GAAvBmB,EAAa/I,QAGX+I,EAAaf,SAASR,EAAGV,MAAM5G,MAAM,EAAE,OAFxC+I,EAAiBC,KAAM1B,GAW3C,OAAOyB,CAAgB,EAG3BE,+BAAgCjE,UAC5B,IAAIkE,EAAU,GACVC,EAAkB,GAEtB5B,EAAWM,KAAKuB,IACXlD,EAAKmD,MAAMC,UAAUF,EAAQ5D,UAC9B0D,EAAQF,KAAKI,EAAQ5D,SAEpBU,EAAKmD,MAAMC,UAAUF,EAAQxB,kBAC9BuB,EAAgBH,KAAKI,EAAQxB,gBAC/B,IAGF,IAAI2B,EAAwB,GACxBpB,QAAcjC,EAAKK,IAAI6B,SAAS,UAAS,GAE7C,GAAID,GAASA,EAAME,aAEf,IAAK,IAAIf,KAAMa,EAAME,aACjB,GAAGf,EAAGK,KAEFuB,EAAQpB,SAASR,EAAGK,GAAGD,gBACpBwB,EAAQpB,SAASR,EAAGG,KAAKC,gBACzByB,EAAgBrB,SAASR,EAAGK,GAAGD,gBAC/ByB,EAAgBrB,SAASR,EAAGG,KAAKC,gBAClC,CACE,MAAM/B,EAAS0B,EAAQC,EAAGC,GAE1B,GAAG5B,EAAO,CACR,IAAIoD,EAAmB,IAAIzB,EAAInG,OAAOwE,EAAOxE,QAE7CoI,EAAsBP,KAAKD,EAC7B,CACJ,CAIZ,OAAOQ,CAAqB,EAEnC,C,sVCzLU,SAASC,EAAmBzK,GACzC,MAAM,EAAEmE,IAAMC,EAAAA,EAAAA,MAER,MAAE+B,EAAK,QAAEuE,KADDtK,EAAAA,EAAAA,KACaoE,EAAAA,KACpBmG,EAAOC,IAAYrG,EAAAA,EAAAA,UAAS,IAC5BsG,EAAYC,IAAiBvG,EAAAA,EAAAA,UAAS,CAC3C,CAACwG,IAAI5G,EAAE,4BAA6B/B,OAAO,eAC3C,CAAC2I,IAAI5G,EAAE,2BAA4B/B,OAAO,cAC1C,CAAC2I,IAAI5G,EAAE,8BAA+B/B,OAAO,iBAC7C,CAAC2I,IAAI5G,EAAE,6BAA8B/B,OAAO,gBAC5C,CAAC2I,IAAI5G,EAAE,4BAA6B/B,OAAO,eAC3C,CAAC2I,IAAI5G,EAAE,2BAA4B/B,OAAO,cAC1C,CAAC2I,IAAI5G,EAAE,mCAAoC/B,OAAO,sBAClD,CAAC2I,IAAI5G,EAAE,gCAAiC/B,OAAO,sBAE1C4I,EAAeC,IAAoB1G,EAAAA,EAAAA,UAAS,KAC5C2G,EAAMC,IAAW5G,EAAAA,EAAAA,UAAS,IA6B3B6G,EAA6BhJ,IACjC,IAAIiJ,EAAa,GASfA,EARC,CACD,gBACA,eACA,cACA,aACA,qBACA,mBACAtC,SAAS3G,GACI,MAEA,GAEf+I,EAAQE,EAAW,EAYvB,OALE9K,EAAAA,WAAgB,KAxCUsK,KACxB,IAAIhB,EAAU,GACdA,EAAQI,MACN,SAACqB,EAAA,EAAQ,CAAYlG,MAAS,aAAa,SAAEjB,EAAE,4BAAhC,OAEjB0G,EAAWU,SAAQ,CAAClB,EAASM,KAC3Bd,EAAQI,MACN,SAACqB,EAAA,EAAQ,CAAalG,MAASiF,EAAQjI,OAAO,SAAEiI,EAAQU,KAAzCJ,GAChB,IAGHM,EAAiBpB,EAAQ,EA8BzB2B,CAAgBX,GAChBD,EAAS5K,EAAM2K,MAAM,GACpB,CAAC3K,KAGJ,UAACyL,EAAA,GAAI,CAAC7G,WAAS,EAAChB,QAAS,EAAE,WACzB,SAAC6H,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,EAAE,UACf,SAAC4G,EAAA,EAAS,CACR1G,WAAS,EACTC,GAAI,KAAO0F,EACXzF,MAAOf,EAAE,wBAA0B,QACnCF,QAAQ,WACRkB,KAAK,QACLC,MAAOpF,EAAMyG,QACbpB,SA/DqBY,UACzBjG,EAAM2L,mBAAmB1E,EAAE,OAiE3B,SAACwE,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,EAAE,UACf,SAAC4G,EAAA,EAAS,CACR1G,WAAS,EACTC,GAAI,KAAO0F,EACXzF,MAAQf,EAAE,gCAAmC+G,EAC7CjH,QAAQ,WACRkB,KAAK,QACLC,MAAOpF,EAAM6I,gBACbxD,SAtEsBY,UAC1BjG,EAAM4L,oBAAoB3E,EAAE,OAwE5B,SAACwE,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,EAAE,UACf,UAAC+G,EAAA,EAAW,CAAC7G,WAAS,aACpB,SAAC8G,EAAA,EAAU,CAAC7G,GAAI,eAAiB0F,EAAOxF,KAAK,QAAO,SAAEhB,EAAE,0BACxD,SAAC4H,EAAA,EAAM,CACL9G,GAAI,iBAAmB0F,EACvBqB,KAAM,KAAOrB,EACbzF,MAAQf,EAAE,uBACV8H,QAAS,eAAiBtB,EAC1BxF,KAAK,QACLC,MAAOpF,EAAMoC,OACbiD,SAjEoB4B,IAC1BmE,EAA0BnE,EAAE3B,OAAOF,OACnCpF,EAAMkM,mBAAmBjF,EAAE,EA+DQ,SAE5B+D,UAKP,SAACS,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,EAAE,UACf,SAACqH,EAAA,EAAM,CAAClH,GAAK0F,EAAQ1G,QAAQ,WAAWmI,WAAW,SAACC,EAAA,EAAM,IAAK7J,QAnD7CyE,IACpBjH,EAAMsM,YAAYrF,EAAE,EAkDkE,SAAE9C,EAAE,+BAI9F,CCjIA,MAAM+C,EAAOlB,EAAQ,OAiBfuG,EAAavG,EAAQ,OAErBwG,EAAa,CAAC3E,EAAO4E,EAAKC,IAC9B7E,EAAM9G,OAAS0L,EAAOC,EAAQ,GAAE7E,EAAM8E,UAAU,EAAGF,QAAW5E,EAAM8E,UAAU9E,EAAM9G,OAAO2L,KAAU7E,EAEvG,IAAI+E,GAAQ,EAIZ,MAAMC,EAAW7G,EAAQ,OAMR8G,EAAAA,EAAAA,IAAY,eAAgBA,EAAAA,EAAAA,IAAY,cAEpCA,EAAAA,EAAAA,IAAY,mBAAoBA,EAAAA,EAAAA,IAAY,kBANjE,IA+BIC,EAAQ,KACRC,EAAkB,EAGlBxE,EAAa,GA8XjB,MA3XA,WACE,MAAM,EAACrE,EAAC,KAAE8I,IAAQ7I,EAAAA,EAAAA,KACZjE,GAAQC,EAAAA,EAAAA,MAER,MAAC8M,EAAK,QAACC,KADIC,EAAAA,EAAAA,MACO5I,EAAAA,KACjBH,EAAKC,IAAUC,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,MACxB2C,EAAMkG,IAAW9I,EAAAA,EAAAA,UAAS,IAAI2C,EAAK,IAAIA,EAAKE,UAAUC,aAAahD,MACnEI,EAAgBC,IAAqBH,EAAAA,EAAAA,UAAS,CACnDI,QAAO,EACPrD,IAAI,MAECgM,EAAYC,IAAiBhJ,EAAAA,EAAAA,UAAS,CAC3C,CACEkC,QAAS,GACToC,gBAAiB,GACjBzG,OAAO,iBAcJoL,EAAeC,IAAkBlJ,EAAAA,EAAAA,WAAS,IAC1CmJ,EAAcC,IAAapJ,EAAAA,EAAAA,UAAS,CACzCqJ,KAAK,GACLtM,IAAI,QAGCuM,EAAWC,IAAgBvJ,EAAAA,EAAAA,WAAS,IAEpCwJ,EAAeC,IAAqBzJ,EAAAA,EAAAA,UAAS,IAErD0J,EAAAA,EAAAA,YAAU,KACPrB,GAAQ,EACH,KAENsB,cAAcnB,EAAM,IAEnB,IAEF,IAAIoB,EAAgB,KAEpB,MAkBMC,EAAU,KACfC,IACCF,EAAgBG,YAAaD,EAAO,KACpCtB,EAAQoB,CAAa,EAGjBE,EAAQpI,UAGZ,MAAM,+BAAEiE,GAAmCqC,EAAWpF,GAChDoH,QAAuBpH,EAAKK,IAAIgH,iBAEtCR,EAAiBO,GACbvB,EAAkBuB,IACpBvB,EAAkBuB,EAClBrE,EAA+B1B,GAC9BhD,MAAMiJ,IAEFA,EAAI1N,OAAS,IACd0N,EAAI3F,KAAKP,IAAOmG,GAAenG,EAAG,IAClCoG,IACF,IAGJ,EAGIA,EAAW,KACF,IAAIC,MAAM/B,GAEjBgC,MAAM,GAIPC,EAAYC,IAAiBxK,EAAAA,EAAAA,UAAS,CAAC,GAUxCyK,EAAqB,KACzB,MAAMC,EAAiBC,IATG,IAACjK,EAAGG,EAY9B,OAZ2BH,EAUP,YAVUG,GAUG6J,EATjCF,GAAe/N,IACE,IAAKA,EAAU,CAACiE,GAAIG,MAUjC6J,GAQJE,MAEO,IATLzK,EAAkB,CAChBC,QAAO,EACPrD,IAAK,GAAE6C,EAAE,oDAAoD3C,KAAK+F,aAE7D,EAKE,EAGP2H,EAAkB,KACtB,IAAI/H,EAAKmD,MAAMC,UAAU+C,EAAW,GAAG7G,SAAU,OAAO,EACxD,IAAI,IAAIgC,EAAG,EAAGA,EAAI6E,EAAWvM,OAAQ0H,IAAK,CAExC,GAA6B,IAAzB6E,EAAW7E,GAAGhC,QAChB,OAAO,EAIT,GAAI6G,EAAW7E,GAAGhC,SAAW6G,EAAW7E,GAAGI,gBACzC,OAAO,EAGT,IAAIuG,GAAW9B,EAAW7E,IACxB,OAAO,CAGX,CAEA,OAAO,CAAI,EAIP2G,GAAcC,IAClB,OAAOA,EAAMjN,QACX,IAAK,cAEL,IAAK,aAqBL,IAAK,aACH,MApBF,IAAK,gBAGL,IAAK,eAIL,IAAK,cAGL,IAAK,aAGL,IAAK,qBAGL,IAAK,kBACH,GAA6B,IAAzBiN,EAAMxG,gBAAwB,OAAO,EACzC,MAGF,QACE,OAAO,EAEX,OAAO,CAAI,EAIPsG,GAAkB,KACtB,IAAIG,EAAW,GAEfA,EAAW,IAAIhC,GAEf,IAAI,IAAI7E,EAAI,EAAGA,EAAI6E,EAAWvM,OAAQ0H,IACpC,GAA2B,cAAxB6E,EAAW7E,GAAGrG,OAAuB,CAGtC,IAAI,IAAImN,EAAID,EAASvO,OAAS,EAAIwO,GAAK,EAAGA,IACpCjC,EAAW7E,GAAGhC,SAAW6I,EAASC,GAAG9I,SAEvC6I,EAASE,OAAOD,EAAE,GAGtBD,EAASrF,KAAKqD,EAAW7E,GAC3B,CAGFD,EAAa8G,CACP,EAGFpD,GAAsBjF,IAC1B,IAAI0D,EAAQ1D,EAAE3B,OAAO0G,KAAK/K,MAAM,GAC5BmE,EAAQ6B,EAAE3B,OAAOF,MACrBkI,EAAW3C,GAAOvI,OAASgD,EAE3BmI,EAAcD,GACdmC,IAAkB,EAGd9D,GAAsB1E,IAC1B,IAAI0D,EAAQ1D,EAAE3B,OAAOL,GAAGhE,MAAM,GAC1BmE,EAAU6B,EAAE3B,OAAOF,MAAOsK,OAAQ/G,cAEtC2E,EAAW3C,GAAOlE,QAAUrB,EAC5BmI,EAAcD,GACdmC,IAAkB,EAGd7D,GAAuB3E,IAC3B,IAAI0D,EAAQ1D,EAAE3B,OAAOL,GAAGhE,MAAM,GAC1BmE,EAAU6B,EAAE3B,OAAOF,MAAOsK,OAAQ/G,cAEtC2E,EAAW3C,GAAO9B,gBAAkBzD,EACpCmI,EAAcD,GACdmC,IAAkB,GAGbE,GAAgBC,KAAqBrL,EAAAA,EAAAA,UAAS,IAC/CkL,GAAoB,KACxB,IAAIjJ,EAAS,GAEb8G,EAAW/B,SAAQ,CAAClB,EAASM,KAE3BnE,EAAOyD,MACL,SAACwB,EAAA,GAAI,CAAC5G,MAAI,EAAaC,GAAI,GAAG,UAC5B,SAAC2F,EAAkB,CACjBE,MAASA,EACTlE,QAAW6G,EAAW3C,GAAOlE,QAC7BoC,gBAAmByE,EAAW3C,GAAO9B,gBACrCzG,OAAUkL,EAAW3C,GAAOvI,OAC5BuJ,mBAAsBA,GACtBC,oBAAuBA,GACvBM,mBAAsBA,GACtBI,YAAeA,GACfnF,KAAQA,KAVIwD,GAajB,IAGHiF,GAAkBpJ,EAAO,EAgBrB8F,GAAgBrF,IAEpBqG,EAAWkC,OAAOvI,EAAE3B,OAAOL,GAAI,GAC/BsI,EAAcD,GACdmC,IAAkB,GAGpBxB,EAAAA,EAAAA,YAAU,KACRwB,IAAkB,GACjB,IAEH,MAAOI,GAAUC,KAAevL,EAAAA,EAAAA,UAAS,IAEnCwL,GAAU,CACd,CAAEC,MAAO,KAAMC,WAAY9L,EAAE,mBAAoBjB,MAAO,IACxD,CAAE8M,MAAO,OAAQC,WAAa9L,EAAE,qBAAsBjB,MAAO,KAC7D,CAAE8M,MAAO,KAAMC,WAAY9L,EAAE,mBAAoBjB,MAAO,KACxD,CAAE8M,MAAO,OAAQC,WAAY9L,EAAE,qBAAsBjB,MAAO,KAC5D,CAAE8M,MAAO,SAAUC,WAAY9L,EAAE,6BAA8BjB,MAAO,MAGlEwL,GAAiBzI,UACrB,IACE6J,IAAa9O,GAAS,IAAIA,EAAK,CAC7BiE,GAAGjE,EAAKD,OACR2H,KAAM8D,EAAWjE,EAAGG,KAAK,EAAE,GAC3BE,GAAI4D,EAAWjE,EAAGG,KAAK,EAAE,GACzBwH,KAAM1D,EAAWjE,EAAG2H,KAAK,EAAE,IAC3B9N,OAAQmG,EAAGnG,UAIf,CAFE,MAAO0E,GAET,CACApC,EAAkB,CAAEC,QAAQ,EAAMrD,IAAM,GAAE6C,EAAE,8BAA8BoE,EAAG2H,QACvE,GAGDC,GAASC,KAAc7L,EAAAA,EAAAA,WAAS,GAMvC,OACE,SAAC8L,EAAA,EAAQ,CACPC,MAAOnM,EAAE,sBACTtC,WACE,UAAC4J,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,EAAGpD,MAAO,CAAC6O,UAAU,QAAQC,cAAc,SAASC,WAAW,EAAEC,cAAc,GAAG,UAC9F7C,IAAa,SAAClK,EAAA,EAAY,KAC3B,SAACwI,EAAA,EAAM,CACLlI,QAAQ,YACRzB,QApRS,KACjB,GAAIwM,IAAJ,CAMA,GAHApC,GAASA,EACTkB,EAAalB,IAEVA,EAOD,OAHAsB,cAAcnB,QACdA,EAAQ,MAJRqB,GALF,CAYA,EAsQQ/L,MAAM,YACNC,GAAI,CAACc,aAAa,IAAI,SAETe,EAAZ0J,EAAc,4BAAgC,yBAEjD,SAAC8C,EAAA,EAAU,CAAC,aAAW,WAAYnO,QAlBlB,KACvB4N,IAAYD,GAAQ,EAiBgDG,MAAO,8BAA8B,UACjG,SAACM,EAAA,EAAY,SAGlB,UACD,UAACnF,EAAA,GAAI,CAAC7G,WAAS,EAAChB,QAASiN,EAAAA,GAAY,WACnC,SAACpF,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAAKpD,MAAO,CAACoE,QAASqK,GAAU,GAAK,QAAQ,UAC1D,UAAC1E,EAAA,GAAI,CAAC7G,WAAS,EAAChB,QAAS,EAAE,WACzB,SAAC6H,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC2G,EAAA,GAAI,CAAC7G,WAAS,EAAChB,QAAS,EAAE,UACzB,SAAC6H,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAAG,UAChB,SAACZ,EAAA,EAAM,CAAC9B,OAAQ,CAAE,gBAnUT0O,IACnBA,EAAOnL,YACR0H,EAAQ,IAAInG,EAAK,IAAIA,EAAKE,UAAUC,aAAayJ,EAAOzM,OACrDuI,IACFA,GAAQ,EACRkB,EAAalB,IAEhB,GA4TqEjG,KAAM,CAAE,IAAOtC,YAK7E,SAACoH,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC2G,EAAA,GAAI,CAAC7G,WAAS,EAAChB,QAAS,EAAE,UACzB,UAAC6H,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAAG,UACjBX,EAAE,gCAA+B,SAACgI,EAAA,EAAM,CAAC7J,GAAK,CAACyO,GAAG,GAAI9M,QAAQ,WAAWzB,QAzFtE,KAMhB8K,EAAWrD,KALO,CAChBxD,QAAS,GACToC,gBAAiB,GACjBzG,OAAO,eAKTmL,EAAcD,GACdmC,IAAkB,EA+EsF,SAAEtL,EAAE,6BAInGwL,SAIL,SAAClE,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAA6BpD,MAAO,CAACoE,QAAUrB,EAAeE,OAAS,IAAM,QAAU,UACpG,SAACzE,EAAA,EAAS,CAACoB,IAAKmD,EAAenD,OADTmD,EAAenD,MAIvC,SAACmK,EAAA,GAAI,CAAC5G,MAAI,EAACC,GAAI,GAAIpD,MAAO,CAAEsP,UAAU,EAAI7N,OAAQ,IAAKD,MAAO,QAAQ,UACpE,SAAC+N,EAAA,EAAQ,CACPC,KAAMrB,GACNE,QAASA,GACTrO,MAAO,CACLsP,UAAU,GACV5N,aAAa,GACbE,OAAO,YACP6N,YAAYhR,EAAMyB,QAAQC,UAAUC,cAOlD,C,4BClcIsP,EAAyBpL,EAAQ,OAKrC2B,EAAQ,OAAU,EAElB,IAAI0J,EAAiBD,EAAuBpL,EAAQ,QAEhDsL,EAActL,EAAQ,OAEtBuL,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gsBACD,YAEJ/J,EAAQ,EAAU4J,C,iDCflB,KAAeI,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDF,EAAG,kFACD,S,0ICFJ,MAAMG,EAAY,CAAC,YAAa,YAAa,UAAW,UAAW,YAiBnE,SAASC,EAAaC,EAAUC,GAC9B,MAAMC,EAAgB1R,EAAAA,SAAAA,QAAuBwR,GAAUG,OAAOC,SAC9D,OAAOF,EAAcG,QAAO,CAACC,EAAQC,EAAO3H,KAC1C0H,EAAOpI,KAAKqI,GAER3H,EAAQsH,EAAclR,OAAS,GACjCsR,EAAOpI,KAAmB1J,EAAAA,aAAmByR,EAAW,CACtDzQ,IAAM,aAAYoJ,OAIf0H,IACN,GACL,CAEA,MAuEME,GAAY7P,EAAAA,EAAAA,IAAO,MAAO,CAC9BsJ,KAAM,WACNwG,KAAM,OACNC,kBAAmB,CAACzS,EAAO0S,IAClB,CAACA,EAAOC,OAJDjQ,EA9DG,IAGf,IAHgB,WACpBkQ,EAAU,MACVzS,GACD,EACKuS,GAASG,EAAAA,EAAAA,GAAS,CACpB/M,QAAS,OACTgN,cAAe,WACdC,EAAAA,EAAAA,IAAkB,CACnB5S,UACC6S,EAAAA,EAAAA,IAAwB,CACzBC,OAAQL,EAAW3S,UACnBiT,YAAa/S,EAAM+S,YAAYD,UAC7BE,IAAa,CACfL,cAAeK,OAGjB,GAAIP,EAAWhP,QAAS,CACtB,MAAMwP,GAAcC,EAAAA,EAAAA,IAAmBlT,GACjCmT,EAAOC,OAAOC,KAAKrT,EAAM+S,YAAYD,QAAQb,QAAO,CAACqB,EAAKC,MAC5B,kBAAvBd,EAAWhP,SAA0D,MAAlCgP,EAAWhP,QAAQ8P,IAAuD,kBAAzBd,EAAW3S,WAA8D,MAApC2S,EAAW3S,UAAUyT,MACvJD,EAAIC,IAAc,GAGbD,IACN,CAAC,GACEE,GAAkBX,EAAAA,EAAAA,IAAwB,CAC9CC,OAAQL,EAAW3S,UACnBqT,SAEIM,GAAgBZ,EAAAA,EAAAA,IAAwB,CAC5CC,OAAQL,EAAWhP,QACnB0P,SAG6B,kBAApBK,GACTJ,OAAOC,KAAKG,GAAiBpI,SAAQ,CAACmI,EAAY/I,EAAOuI,KAGvD,IAFuBS,EAAgBD,GAElB,CACnB,MAAMG,EAAyBlJ,EAAQ,EAAIgJ,EAAgBT,EAAYvI,EAAQ,IAAM,SACrFgJ,EAAgBD,GAAcG,CAChC,KAIJ,MAAMC,EAAqB,CAACX,EAAWO,KACrC,MAAO,CACL,gCAAiC,CAC/BK,OAAQ,EACR,CAAE,SA1DiB9T,EA0DYyT,EAAaC,EAAgBD,GAAcd,EAAW3S,UAzDtF,CACL+T,IAAK,OACL,cAAe,QACfC,OAAQ,MACR,iBAAkB,UAClBhU,OAoD0GiU,EAAAA,EAAAA,IAASd,EAAaD,KA1DvGlT,KA4DtB,EAGHyS,GAASyB,EAAAA,EAAAA,GAAUzB,GAAQK,EAAAA,EAAAA,IAAkB,CAC3C5S,SACCyT,EAAeE,GACpB,CAGA,OADApB,GAAS0B,EAAAA,EAAAA,IAAwBjU,EAAM+S,YAAaR,GAC7CA,CAAM,IAST2B,EAAqB9T,EAAAA,YAAiB,SAAe+T,EAASC,GAClE,MAAMC,GAAaC,EAAAA,EAAAA,GAAc,CAC/BzU,MAAOsU,EACPtI,KAAM,aAEFhM,GAAQ0U,EAAAA,EAAAA,GAAaF,IAErB,UACJG,EAAY,MAAK,UACjB1U,EAAY,SAAQ,QACpB2D,EAAU,EAAC,QACXgR,EAAO,SACP7C,GACE/R,EACE6U,GAAQC,EAAAA,EAAAA,GAA8B9U,EAAO6R,GAE7Ce,EAAa,CACjB3S,YACA2D,WAEF,OAAoBgO,EAAAA,EAAAA,KAAKW,GAAWM,EAAAA,EAAAA,GAAS,CAC3CkC,GAAIJ,EACJ/B,WAAYA,EACZ2B,IAAKA,GACJM,EAAO,CACR9C,SAAU6C,EAAU9C,EAAaC,EAAU6C,GAAW7C,IAE1D,IA2CA,K","sources":["components/Snackbars.js","components/common/BadgeAvatars.js","components/common/SetRPC.js","helper/etherscanUtils.js","helper/rpc.js","utils/watch/transactionChecker.js","components/AddressActionGroup.js","views/watchtools/WatchAddress.js","../node_modules/@mui/icons-material/Settings.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/esm/Stack/Stack.js"],"sourcesContent":["/*\r\n * @Author: craig smith\r\n * @Date: 2022-10-27 22:23:38\r\n * @LastEditTime: 2022-11-02 13:01:33\r\n * @FilePath: \\berry\\src\\components\\Snackbars.js\r\n * @Description: \r\n */\r\nimport * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Slide from '@mui/material/Slide';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"right\"/>;\r\n}\r\n\r\nexport default function Snackbars(props) {\r\n  const theme = useTheme()\r\n  const [snackPack, setSnackPack] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n  const [transition, setTransition] = React.useState(undefined);\r\n\r\n  React.useEffect(() => {\r\n    setTransition(() => TransitionLeft);\r\n    if (snackPack.length && !messageInfo) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && messageInfo && open) {\r\n      // Close an active snack when a new one is added\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, open]);\r\n\r\n  const handleClick = (message) => () => {\r\n    setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setMessageInfo(undefined);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //console.log('props==>',props)\r\n    setSnackPack((prev) => [...prev, { message:props.msg, key: new Date().getTime() }]);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{background: theme.palette.secondary.main}}>\r\n      <Snackbar\r\n        key={messageInfo ? messageInfo.key : undefined}\r\n        open={open}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n        TransitionComponent={transition}\r\n        TransitionProps={{ onExited: handleExited }}\r\n        message={messageInfo ? messageInfo.message : undefined}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              sx={{ p: 0.5 }}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Badge from '@mui/material/Badge';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  '& .MuiBadge-badge': {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: 'ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SmallAvatar = styled(Avatar)(({ theme }) => ({\r\n  width: 22,\r\n  height: 22,\r\n  border: `2px solid ${theme.palette.background.paper}`,\r\n}));\r\n\r\nexport default function BadgeAvatars() {\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <StyledBadge\r\n        overlap=\"circular\"\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        variant=\"dot\"\r\n      >\r\n      </StyledBadge>\r\n    </Stack>\r\n  );\r\n}","/*\r\n * @Author: craig smith\r\n * @Date: 2022-10-27 22:23:38\r\n * @LastEditTime: 2022-11-05 10:04:12\r\n * @FilePath: \\berry\\src\\components\\common\\SetRPC.js\r\n * @Description: \r\n */\r\nimport React, {  useState } from \"react\";\r\nimport { Grid,Button,TextField } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport {useTranslation} from 'react-i18next'; \r\n\r\nimport checkRPC  from  'helper/rpc'\r\nimport Snackbars from 'components/Snackbars'\r\nimport CONFIG from 'config/config.json'\r\n\r\nexport default function SetRPC(props) {\r\n  const { t } = useTranslation()\r\n  const [rpc, setRPC] = useState(CONFIG.NETWORK.RPC);\r\n  const [snackbarsStatu, setSnackbarsStatu] = useState({\r\n    isOpen:false,\r\n    msg:''\r\n  }); \r\n\r\n  const setRPCAction = (event) => {\r\n    setRPC(event.target.value);\r\n  };\r\n\r\n  const changeRPCAction = () => {\r\n    //check connect\r\n    checkRPC(rpc).then((responseTime) =>{\r\n     //console.log('responseTime//',responseTime) \r\n     if(responseTime == false){\r\n      props.action.changeRPCAction({available:false,rpc:rpc,msg:`${t('setRPC.connectRPCFail')}`})\r\n      setSnackbarsStatu({isOpen:true,msg:`${t('setRPC.connectRPCFail')}`})\r\n     }else{\r\n      props.action.changeRPCAction({available:true,rpc:rpc,msg:`${t('setRPC.connectRPCSuccess')} ${responseTime} mm`}) \r\n      setSnackbarsStatu({isOpen:true,msg:`${t('setRPC.connectRPCSuccess')} ${responseTime} mm`})            \r\n     }     \r\n    })\r\n  };\r\n\r\n  const clearRPC = () => {\r\n    setRPC('');\r\n  };  \r\n\r\n  return (  \r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm ={6}>\r\n        <TextField \r\n          fullWidth \r\n          id=\"rpc\" \r\n          label={t('setRPC.node')} \r\n          variant=\"outlined\"  \r\n          size=\"small\" \r\n          value={rpc}\r\n          onChange={setRPCAction}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}  sm ={5}>\r\n        <Button variant=\"contained\"  onClick={changeRPCAction}>{t('setRPC.confirm')}</Button>\r\n        <Button variant=\"outlined\" onClick={clearRPC}  disabled = {rpc == ''} style={{marginLeft:5}}>{t('setRPC.clear')}</Button>\r\n      </Grid> \r\n      \r\n      <Grid item xs={12} key={snackbarsStatu.msg} style={{display:(snackbarsStatu.isOpen ? ' ' : 'none')}}>\r\n        <Snackbars msg = {snackbarsStatu.msg}></Snackbars>\r\n      </Grid>  \r\n    </Grid>\r\n  )\r\n}\r\n","/*\n * @Author: error: git config user.name && git config user.email & please set dead value or install git\n * @Date: 2022-10-22 10:24:00\n * @LastEditors: error: git config user.name && git config user.email & please set dead value or install git\n * @LastEditTime: 2022-10-26 15:46:23\n * @FilePath: \\NFTTools\\src\\helper\\etherscanUtils.js\n * @Description: \n */\nconst axios = require('axios').default;\nimport CONFIG from '../config/config.json'\n\nasync function getContractABI(chain, contractAddress) {\n  const proxyTarget = CONFIG.GETABIADDRESS//转发到地址\n  try{   \n    //由于服务器使用过的是https协议，这里也要使用https\n    const contractABI = await axios.get(proxyTarget,{\n        params:{\n          //不需要module: 'contract',\n          //不需要action: 'getabi',\n          address: contractAddress,\n          //不需要apikey: scanApiKey\n        }\n      })\n    .then(function (response) {\n      // handle success\n      //console.log('getContractABI response',response.data.result);\n      return response.data.result;\n    })\n    .catch(function (error) {\n      // handle error\n      //console.log('getContractABI error',error);\n    });\n    //console.log('11111111abi',abi)\n    //try convert json,find if have error\n    const isValidJson = JSON.parse(contractABI)\n    return contractABI;\n  }catch(e){\n    return 0\n  }\n}\n  \n  export { getContractABI }","'use strict';\nconst Web3 = require('web3');\nexport default function checkRPC(rpc){\n    const web3 = new Web3(new Web3.providers.HttpProvider(rpc));\n    const startTime = Date.now();//毫秒级事件戳\n    //console.log('startTime',startTime)\n    const result = web3.eth.getChainId().then((e)=>{      \n      return Date.now() - startTime  \n    })\n    .catch((e)=>{\n        return false\n    })\n    return result\n}","'use strict';\n//accounts array\nmodule.exports = (web3) => {\n  //拆分十六进制数据\n  const parseInput = (input) =>{\n    let inputs = []\n    const inputLen = input.length\n    let slicePos = 0  //风格开始位置  \n    let sliceLen = 10 //分割长度\n    let paramNum = 0 //第几个分割\n\n    inputs[0]= input.slice(0,10) //从第一个到第十个   \n\n    slicePos += 10\n    sliceLen = 64\n    paramNum ++\n\n    while(slicePos < inputLen){\n      inputs[paramNum]= input.slice(slicePos,slicePos + sliceLen)\n      slicePos = slicePos + sliceLen\n      paramNum ++\n    }\n\n    //////console.log('inputs',inputs)\n\n    return inputs;\n  }\n\n  const myTo32Bytes = (str) =>{\n    if(str.length<64){\n        var str='0'.repeat(64-str.length)+str;\n    }\n    if(str.length>64){\n        var str=str.slice(0,63);\n    }\t\n    return str;\t\n  }\n\n    const checkTx = (tx,watchArray) => {\n      //console.log('watchArray',watchArray)\n        for(let i = 0; i < watchArray.length; i++ ){\n            switch(watchArray[i].action){\n                case 'transferEth':\n                  if(watchArray[i].address == tx.from.toLowerCase()) return { action:'transferEth' }\n                  break;\n                case 'recieveEth': \n                  if(watchArray[i].address == tx.to.toLowerCase()) return  { action:'recieveEth' }                            \n                  break;\n                case 'transferToken':\n                  if( watchArray[i].address == tx.from.toLowerCase() && watchArray[i].oppositeAddress == tx.to.toLowerCase() ){                    \n                    if(tx.input){\n                      const inputs = parseInput(tx.input)\n                      if( inputs[0] = '0xa9059cbb' ) return { action:'transferToken' }                     \n                    }\n                  }                   \n                  break;\n                case 'recieveToken':\n                  if( watchArray[i].oppositeAddress == tx.to.toLowerCase() ){                    \n                    if(tx.input){\n                      const inputs = parseInput(tx.input)\n                      if( inputs[0] = '0xa9059cbb' && inputs[1].toLowerCase() == myTo32Bytes(watchArray[i].address.slice(2))) return  { action:'recieveToken' }                      \n                    }\n                  }                     \n                  break;\n                case 'transferNFT':\n                    if( watchArray[i].address == tx.from.toLowerCase() && watchArray[i].oppositeAddress == tx.to.toLowerCase() ){                    \n                        if(tx.input){\n                          const inputs = parseInput(tx.input)\n                          if( inputs[0] = '0x23b872dd' &&  (inputs[1].toLowerCase() == myTo32Bytes(watchArray[i].address.slice(2)))) { \n                            return   { action:'transferNFT' }  \n                          }                     \n                        }\n                      }  \n                  break;\n                case 'recieveNFT':    \n                if( watchArray[i].oppositeAddress == tx.to.toLowerCase() ){                    \n\n                  } \n                  break;        \n                case 'interactToContract':\n                  if(watchArray[i].address == tx.from.toLowerCase() && watchArray[i].oppositeAddress == tx.to.toLowerCase()) return { action:'interactToContract' } \n                  break;  \n                case 'beingInteracted'://合约账户\n                  if(watchArray[i].address == tx.to.toLowerCase()) return { action:'beingInteracted' } \n                  break;\n                case 'noSelected':\n                  if(watchArray[i].address == tx.from.toLowerCase() || watchArray[i].address == tx.to.toLowerCase()) return  { action:'noSelected' } \n                  if(tx.input){\n                    const inputs = parseInput(tx.input)\n                    const inputsLowCase = inputs.map( e => e.toLowerCase())\n                    if(inputsLowCase.includes(myTo32Bytes(watchArray[i].address.slice(2))))  return  { action:'noSelected' } \n                  }                  \n                  break;        \n                default:\n                  return false\n            }      \n        }        \n    }\n\n\n\n    return {\n      checkLastBlock: async (accounts) => {\n            const accountsLower = accounts.map( account => account.toLowerCase())        \n            let block = await web3.eth.getBlock('latest',true);\n            //console.log(`[*] Searching block ${ block.number }...`);\n            if (block && block.transactions) {\n                //console.log(`[+] Transaction found on block`,block.transactions);\n                for (let tx of block.transactions) {\n                    let transaction = await web3.eth.getTransaction(tx);\n                    if(transaction.from){\n                      if (accountsLower.includes(transaction.from.toLowerCase())) {\n                          //console.log(`[+] Transaction found on block ${ block.number }`);\n                          //console.log({ address: transaction.from, value: web3.utils.fromWei(transaction.value, 'ether'), timestamp: new Date() });\n                      }\n                    }\n                }\n            }\n            return 0\n        },\n        checkBlocks: async (start, end, accounts) => {\n            const accountsLower = accounts.map( account => account.toLowerCase()) \n            for (let i = start; i < end; i++) {\n                let block = await web3.eth.getBlock(i)\n                //console.log(`[*] Searching block ${ i }`);\n                if (block && block.transactions) {\n                    for (let tx of block.transactions) {\n                        let transaction = await web3.eth.getTransaction(tx);\n                        if (accountsLower.includes(transaction.from.toLowerCase())) {\n                            //console.log(`[+] Transaction found on block ${ lastBlockNumber }`);\n                            //console.log({ address: transaction.from, value: web3.utils.fromWei(transaction.value, 'ether'), timestamp: new Date() });\n                        }\n                    }\n                }\n            }\n        },\n        //For WatchContract.js\n        getActionsFromLastBlock: async (accounts,methods) => {\n            const accountsLower = accounts.map( account => account.toLowerCase()) \n            const methodsLower = methods.map( method => method.toLowerCase().slice(0,10))\n            //console.log(methodsLower) \n            let foundTransaction = []       \n            let block = await web3.eth.getBlock('latest',true);\n            //console.log(`[*] Searching block ${ block.number }...`);\n            if (block && block.transactions) {\n                //console.log(`[+] Transaction found on block`,block.transactions);\n                for (let tx of block.transactions) {\n                    if(tx.to){\n                        if (accountsLower.includes(tx.to.toLowerCase())) {\n                            //console.log(`[+] Transaction found on block`, tx);\n                            //can empty\n                            //这个逻辑可能有问题\n                            if(methodsLower.length == 0){                                \n                                foundTransaction.push( tx )\n                            }else{\n                              if(methodsLower.includes(tx.input.slice(0,10))){\n                                foundTransaction.push( tx )                                \n                              }                                \n                            }\n\n                        }\n                    }                    \n                }\n            }\n            return foundTransaction\n        },\n        //For WatchAddress.js\n        getAddressActionsFromLastBlock: async (watchArray) => {\n            let addrArr = []\n            let oppositeAddrArr = []            \n            //console.log('watchArray',watchArray);              \n            watchArray.map((element) => {\n              if(web3.utils.isAddress(element.address)){\n                addrArr.push(element.address)\n              }\n              if(web3.utils.isAddress(element.oppositeAddress)){\n                oppositeAddrArr.push(element.oppositeAddress)\n              }                           \n            })\n            //console.log('addrArr',addrArr);           \n            let foundTransactionArray = []       \n            let block = await web3.eth.getBlock('latest',true);\n            //console.log(`[*] Searching block ${ block.number }...`);\n            if (block && block.transactions) {\n                //console.log(`[+] Transaction found on block`,block.transactions);\n                for (let tx of block.transactions) {\n                    if(tx.to){\n                        if (\n                        addrArr.includes(tx.to.toLowerCase()) \n                        || addrArr.includes(tx.from.toLowerCase()) \n                        || oppositeAddrArr.includes(tx.to.toLowerCase())\n                        || oppositeAddrArr.includes(tx.from.toLowerCase())                          \n                        ) {\n                            const result = checkTx(tx,watchArray)\n                            //console.log('result',result)\n                            if(result){\n                              let foundTransaction = {...tx ,action:result.action}\n                              //console.log(foundTransaction)\n                              foundTransactionArray.push(foundTransaction)\n                            }\n                        }\n                    }                    \n                }\n            }\n            return foundTransactionArray\n        }\n    }\n}\n","import React, { useState } from \"react\"\r\n\r\nimport { \r\n  Grid, \r\n  Button, \r\n  TextField, \r\n  InputLabel, \r\n  FormControl, \r\n  Select, \r\n  MenuItem\r\n } from '@mui/material';\r\n\r\nimport { Delete } from '@mui/icons-material';\r\n\r\nimport {useTranslation} from 'react-i18next';\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nimport {getContractABI} from './../helper/etherscanUtils'\r\nimport {rebuildContractABI} from './../helper/chainUtils'\r\nimport CONFIG from 'config/config.json'\r\n\r\nexport default function AddressActionGroup(props) {\r\n  const { t } = useTranslation()\r\n  const theme = useTheme(); \r\n  const { chain, chainId } = CONFIG.NETWORK\r\n  const [index, setIndex] = useState(0);\r\n  const [methodList, setMethodList] = useState([\r\n    {txt:t('watchAddress.transferEth'), action:'transferEth'},  \r\n    {txt:t('watchAddress.recieveEth'), action:'recieveEth'},\r\n    {txt:t('watchAddress.transferToken'), action:'transferToken'},        \r\n    {txt:t('watchAddress.recieveToken'), action:'recieveToken'}, \r\n    {txt:t('watchAddress.transferNFT'), action:'transferNFT'},        \r\n    {txt:t('watchAddress.recieveNFT'), action:'recieveNFT'},      \r\n    {txt:t('watchAddress.interactToContract'), action:'interactToContract'},\r\n    {txt:t('watchAddress.beingInteracted'), action:'beingInteracted'}    \r\n  ]);  \r\n  const [methodListDom, setMethodListDom] = useState([]); \r\n  const [star, setStar] = useState('');     \r\n\r\n  const addressParamChange = async (e) => {\r\n    props.addressParamChange(e)\r\n  }; \r\n  \r\n  const oppositeParamChange = async (e) => {\r\n    props.oppositeParamChange(e)\r\n  };   \r\n\r\n  const parseMethodList = ((methodList) => {\r\n    let methods = []\r\n    methods.push(\r\n      <MenuItem key={9999} value = {'noSelected'}>{t('watchAddress.noSelected')}</MenuItem>\r\n    )   \r\n    methodList.forEach((element, index) => {\r\n      methods.push(\r\n        <MenuItem key={index} value = {element.action}>{element.txt}</MenuItem>\r\n      )\r\n    })\r\n    //console.log(\"methods//////////\",methods)\r\n    setMethodListDom(methods)\r\n  })\r\n\r\n  const actionSelectChange = (e) => {\r\n    setOppositeAddressRequire(e.target.value)\r\n    props.actionSelectChange(e)\r\n  };\r\n\r\n  const setOppositeAddressRequire = (action) =>{\r\n    let starString = ''\r\n    if([\r\n      'transferToken',\r\n      'recieveToken',\r\n      'transferNFT',\r\n      'recieveNFT',\r\n      'interactToContract',\r\n      'beingInteracted'\r\n    ].includes(action)){\r\n      starString = '(*)'\r\n    }else{\r\n      starString = ''      \r\n    }\r\n    setStar(starString)    \r\n  }\r\n\r\n  const deleteParam = ((e) => {\r\n    props.deleteParam(e)\r\n  })  \r\n\r\n  React.useEffect(() => {\r\n    parseMethodList(methodList)\r\n    setIndex(props.index)\r\n  }, [props]);\r\n\r\nreturn (\r\n  <Grid container spacing={1}>\r\n    <Grid item xs={3}>\r\n      <TextField\r\n        fullWidth\r\n        id={\"A_\" + index}\r\n        label={t('watchAddress.address') + '( * )'}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        value={props.address}\r\n        onChange={addressParamChange}\r\n      />\r\n    </Grid>\r\n    <Grid item xs={3}>\r\n      <TextField\r\n        fullWidth\r\n        id={\"O_\" + index}\r\n        label={ t('watchAddress.oppositeAddress')  + star}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        value={props.oppositeAddress}\r\n        onChange={oppositeParamChange}\r\n      />\r\n    </Grid>        \r\n    <Grid item xs={3}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id={\"action_label\" + index} size=\"small\">{t('watchAddress.action')}</InputLabel>\r\n        <Select\r\n          id={\"action_select_\" + index}\r\n          name={\"S_\" + index}\r\n          label= {t('watchAddress.action')}\r\n          labelId={\"action_label\" + index}\r\n          size=\"small\"\r\n          value={props.action}\r\n          onChange={actionSelectChange}\r\n        >\r\n          {methodListDom}                                    \r\n        </Select>\r\n      </FormControl>\r\n    </Grid>\r\n\r\n    <Grid item xs={1}>\r\n      <Button id={ index } variant=\"outlined\" startIcon={<Delete />} onClick={deleteParam}>{t('watchAddress.delParam')}</Button>\r\n    </Grid>\r\n</Grid>\r\n);\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {Grid,\r\n  Button,\r\n  IconButton\r\n} from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nconst Web3 = require('web3');\r\n\r\nimport Storage from 'helper/Storage'\r\nimport SetRPC from  'components/common/SetRPC'\r\nimport Snackbars from 'components/Snackbars'\r\n\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nimport {useTranslation} from 'react-i18next'; \r\nimport CONFIG from 'config/config.json'\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport BadgeAvatars from 'components/common/BadgeAvatars';\r\nimport AddressActionGroup from 'components/AddressActionGroup';\r\nconst checkBlock = require('utils/watch/transactionChecker')\r\n\r\nconst truncateLR = (input, lenL,lenR) =>\r\n  input.length > lenL + lenR ? `${input.substring(0, lenL)}...${input.substring(input.length-lenR)}` : input;\r\n\r\nlet sOpen = false\r\n\r\nlet isLoading = true\r\nlet transactionDetecteds = {}\r\nconst audioUrl = require('./../../beep.mp3')\r\n\r\nlet sOpenFollow = false\r\nlet sOnlyFree = false\r\n\r\n//已经跟过的单，保存tx\r\nlet mintedHash = Storage.get('mintedHash') ? Storage.get('mintedHash') : []\r\n//已经mint的contract\r\nlet mintedContract = Storage.get('mintedContract') ? Storage.get('mintedContract') : []\r\n//用于记录已经已采集的区块，解决区块数据早区块后到问题\r\nlet blocknumberRecordArr = []\r\n\r\n//记录交易详情\r\nlet transactionsObject = {}\r\n//记录合约详情\r\nlet contractObject = {}\r\n//记录合约nft总量\r\nlet contractMaxSupply = {}\r\n//记录mint记录\r\nlet mintRecord = []\r\n\r\n//解决子组件没能读取父组件state的临时解决\r\nlet pKey = {\r\n  addrStr:\"\",   \r\n  pkStr:\"\",\r\n  pkArr:[],\r\n  addrArr:[] \r\n}\r\nlet wAddr = {\r\n  addrStr:\"\",\r\n  addrArr:[]\r\n}\r\n\r\nlet timer = null\r\nlet lastBlockNumber = 0\r\n\r\n//和paramArray有区别,对用户填写的参数进行整理过滤\r\nlet watchArray = []\r\n///////////////////////////////////////////////////////////////////////////////////////////////\r\n \r\nfunction WatchAddress() {  \r\n  const {t, i18n} = useTranslation()\r\n  const theme = useTheme()\r\n  const dispatch = useDispatch();\r\n  const {CHAIN,CHAINID} = CONFIG.NETWORK\r\n  const [rpc, setRPC] = useState(CONFIG.NETWORK.RPC); \r\n  const [web3, setWeb3] = useState(new Web3(new Web3.providers.HttpProvider(rpc))) \r\n  const [snackbarsStatu, setSnackbarsStatu] = useState({\r\n    isOpen:false,\r\n    msg:''\r\n  });  \r\n  const [paramArray, setParamArray] = useState([\r\n    {\r\n      address: \"\",\r\n      oppositeAddress: '',\r\n      action:'noSelected'\r\n    }\r\n  ]);\r\n \r\n  const changeRPCAction = (newRpc) => {\r\n     if(newRpc.available){     \r\n       setWeb3(new Web3(new Web3.providers.HttpProvider(newRpc.rpc))) \r\n       if(sOpen) {\r\n        sOpen = false\r\n        setIsRunning(sOpen)\r\n       }      \r\n     }     \r\n  }; \r\n\r\n  const [isOpenDialogs, setOpenDialogs] = useState(false);  \r\n  const [dialogObject, setDialog] = useState({\r\n    type:'',\r\n    msg:null\r\n  });  \r\n\r\n  const [isRunning, setIsRunning] = useState(false);   \r\n  /////////////////////////////////\r\n  const [nowBlocknumber,setNowBlocknuber] =  useState(0);\r\n\r\n\tuseEffect(() => {\r\n    sOpen = false    \r\n\t\treturn () => {\r\n      //清除定时器\r\n\t\t\tclearInterval(timer)\r\n\t\t}\r\n\t}, []);\r\n\r\n  let watchInterval = null\r\n\r\n  const startWatch = () => {\r\n    if(!verifyFormForStart()){\r\n      return\r\n    }\r\n    sOpen = !sOpen;//这个似乎多余，不过记得这个放组件内部无效，以后再试试,可能重新渲染的远古\r\n    setIsRunning(sOpen)\r\n    ////////console.log(`[+] sOpen ${sOpen}`)\r\n    if(sOpen){\r\n      doWatch()         \r\n    }else{\r\n      ////////console.log('watchInterval1',watchInterval)          \r\n      clearInterval(timer)\r\n      timer = null\r\n      ////////console.log('watchInterval2',watchInterval)\r\n      return      \r\n    }\r\n  }\r\n  \r\n  const doWatch = () => {\r\n\t  watch() \r\n    watchInterval = setInterval( watch, 3000)  \r\n    timer = watchInterval  \r\n  }  \r\n  \r\n  const watch = async () => {\r\n\r\n    //有些操作没有日志 GetPastLogs取不到 需要扫区块\r\n    const { getAddressActionsFromLastBlock } = checkBlock(web3) \r\n    const newBlockNumber = await web3.eth.getBlockNumber()\r\n    //console.log(newBlockNumber)\r\n    setNowBlocknuber(newBlockNumber)\r\n    if (lastBlockNumber < newBlockNumber){\r\n      lastBlockNumber = newBlockNumber\r\n      getAddressActionsFromLastBlock(watchArray)\r\n      .then((res)=>{\r\n        //console.log('getActionsFromLastBlock',res)\r\n        if(res.length > 0){\r\n          res.map( tx => {updateGridRows(tx)})\r\n          playBeep()\r\n        }\r\n        \r\n      })\r\n    }    \r\n  }\r\n\r\n  const playBeep = () => {\r\n    var audio  = new Audio(audioUrl);\r\n    //audio.src = audioUrl.default \r\n    audio.play();\r\n  } \r\n\r\n  //================================================================VerifyForm Data\r\n  const [formErrors, setFormErrors] = useState({})  \r\n\r\n  const setFormErrorsAction = (id,value) =>{\r\n    setFormErrors((prev) => {\r\n      let newValue = { ...prev, ...{[id]:value} }\r\n      ////////console.log('newValue',newValue)\r\n      return newValue\r\n    })\r\n  }\r\n\r\n  const verifyFormForStart = () => {\r\n    const checkWatchAddr = checkParamArray() \r\n    setFormErrorsAction('watchAddr',!checkWatchAddr) \r\n\r\n    if(!checkWatchAddr){\r\n      setSnackbarsStatu({\r\n        isOpen:true,\r\n        msg:`${t('watchAddress.pleaseSetTheWatchAddress')} ( Time: ${Date.now()} )`}\r\n      ); \r\n      return false      \r\n    }\r\n\r\n    buildWatchArray()\r\n\r\n    return true    \r\n  } \r\n\r\n  const checkParamArray = () => {\r\n    if(!web3.utils.isAddress(paramArray[0].address)) return false\r\n    for(let i =0; i < paramArray.length; i++ ){\r\n\r\n      if (paramArray[i].address == ''){\r\n        return false       \r\n      }  \r\n      \r\n      //两个地址不能相同      \r\n      if (paramArray[i].address == paramArray[i].oppositeAddress){\r\n        return false       \r\n      }  \r\n      \r\n      if(!checkParam(paramArray[i])){\r\n        return false          \r\n      }\r\n\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  //检查合法性\r\n  const checkParam = (param) => {\r\n    switch(param.action){\r\n      case 'transferEth':\r\n        break;\r\n      case 'recieveEth': \r\n        break;\r\n      case 'transferToken':       \r\n        if( param.oppositeAddress == '' ) return false\r\n        break;\r\n      case 'recieveToken':  \r\n        //console.log('param.oppositeAddress == ',param.oppositeAddress == '')  \r\n        if( param.oppositeAddress == '' ) return false\r\n        break;\r\n      case 'transferNFT':\r\n        if( param.oppositeAddress == '' ) return false\r\n        break;\r\n      case 'recieveNFT':    \r\n        if( param.oppositeAddress == '' ) return false\r\n        break;        \r\n      case 'interactToContract':\r\n        if( param.oppositeAddress == '' ) return false\r\n        break;  \r\n      case 'beingInteracted':\r\n        if( param.oppositeAddress == '' ) return false\r\n        break;\r\n      case 'noSelected':\r\n        break;        \r\n      default:\r\n        return true\r\n    }\r\n    return true    \r\n  }\r\n\r\n  //对用户填写的参数进行整理过滤\r\n  const buildWatchArray = () => {\r\n    let newArray = []\r\n    //console.log('paramArray',paramArray)     \r\n    newArray = [...paramArray] //需要解构，直接赋值会时引用\r\n    //console.log('newArray1',newArray)    \r\n    for(let i = 0; i < paramArray.length; i++ ){\r\n      if(paramArray[i].action == 'noSelected'){\r\n        //console.log('paramArray[i].address',paramArray[i].address)\r\n        //删除掉newArray中有相同address的项\r\n        for(let j = newArray.length - 1 ; j >= 0; j-- ){\r\n          if( paramArray[i].address == newArray[j].address ){\r\n            //console.log('newArray[j].address',newArray[j].address)\r\n            newArray.splice(j,1)\r\n          }\r\n        }\r\n        newArray.push(paramArray[i])\r\n      }\r\n    }\r\n    //console.log('newArray2',newArray)\r\n    watchArray = newArray\r\n    return \r\n  }\r\n\r\n  const actionSelectChange = (e) => {\r\n    let index = e.target.name.slice(2)\r\n    let value = e.target.value\r\n    paramArray[index].action = value  \r\n    //console.log(\"paramArray==>\",paramArray)\r\n    setParamArray(paramArray)\r\n    parseParamsArray()\r\n  };\r\n\r\n  const addressParamChange = (e) => {\r\n    let index = e.target.id.slice(2)\r\n    let value = ((e.target.value).trim()).toLowerCase()\r\n    //console.log(index)\r\n    paramArray[index].address = value\r\n    setParamArray(paramArray)\r\n    parseParamsArray()\r\n  };\r\n\r\n  const oppositeParamChange = (e) => {\r\n    let index = e.target.id.slice(2)\r\n    let value = ((e.target.value).trim()).toLowerCase()\r\n    //console.log(index)\r\n    paramArray[index].oppositeAddress = value\r\n    setParamArray(paramArray)\r\n    parseParamsArray()\r\n  };  \r\n\r\n  const [paramsDOMArray, setParamsDOMArray] = useState([])\r\n  const parseParamsArray = (() => {\r\n    let params = []\r\n    //console.log(\"paramArray==>\", paramArray)\r\n    paramArray.forEach((element, index) => {\r\n      //console.log('element:',element);\r\n      params.push(\r\n        <Grid item key={index} xs={12}>\r\n          <AddressActionGroup\r\n            index = {index}\r\n            address = {paramArray[index].address} \r\n            oppositeAddress = {paramArray[index].oppositeAddress}  \r\n            action = {paramArray[index].action}\r\n            addressParamChange = {addressParamChange}\r\n            oppositeParamChange = {oppositeParamChange}            \r\n            actionSelectChange = {actionSelectChange}\r\n            deleteParam = {deleteParam} \r\n            web3 = {web3}   \r\n          /> \r\n        </Grid>\r\n      )\r\n    })\r\n    //console.log(\"params//////////\",params)\r\n    setParamsDOMArray(params)\r\n  })\r\n\r\n  const addParam = (() => {\r\n    let paramObject = {\r\n      address: \"\",\r\n      oppositeAddress: '',\r\n      action:'noSelected'\r\n    }\r\n    paramArray.push(\r\n      paramObject\r\n    )\r\n    setParamArray(paramArray)\r\n    parseParamsArray();\r\n  })\r\n\r\n  const deleteParam = ((e) => {\r\n    //console.log(\"e.id\",e.target.id)\r\n    paramArray.splice(e.target.id, 1);\r\n    setParamArray(paramArray)\r\n    parseParamsArray();\r\n  })\r\n\r\n  useEffect(() => {\r\n    parseParamsArray();\r\n  }, []);\r\n  //================================================================\r\n  const [gridRows, setGridRows] = useState([])\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: t('watchAddress.id'), width: 20  },\r\n    { field: \"from\", headerName:  t('watchAddress.from'), width: 200 },\r\n    { field: \"to\", headerName: t('watchAddress.to'), width: 160 },\r\n    { field: \"hash\", headerName: t('watchAddress.hash'), width: 300 }, \r\n    { field: \"action\", headerName: t('watchAddress.actionHeader'), width: 300 }        \r\n  ];\r\n\r\n  const updateGridRows = async (tx) => {\r\n    try {\r\n      setGridRows((prev) => [...prev,{\r\n        id:prev.length, \r\n        from: truncateLR(tx.from,4,6), \r\n        to: truncateLR(tx.from,4,6),\r\n        hash: truncateLR(tx.hash,4,16),\r\n        action: tx.action        \r\n      }])\r\n    } catch (error) {\r\n      ////console.log('error ==> ', error)       \r\n    }\r\n    setSnackbarsStatu({ isOpen: true, msg: `${t('watchAddress.foundNewTx')} ${tx.hash}` });\r\n    return       \r\n  }\r\n\r\n  const [openSet, setOpenSet] = useState(true);  \r\n\r\n  const setOpenSetAction = ()=>{\r\n    setOpenSet(!openSet)\r\n  }\r\n\r\n  return ( \r\n    <MainCard \r\n      title={t('watchAddress.title')}\r\n      secondary={\r\n        <Grid item xs={6} style={{textAlign:'right',verticalAlign:'middle',paddingTop:6,paddingBottom:6}}>         \r\n          {isRunning && <BadgeAvatars />}\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={startWatch} \r\n            color='secondary'\r\n            sx={{borderRadius:10}}             \r\n          >\r\n            {isRunning ? t('watchAddress.startRunning'): t('watchAddress.start')}\r\n          </Button>          \r\n          <IconButton aria-label=\"settings\"  onClick={setOpenSetAction} title={'click to open/close setting'}>\r\n            <SettingsIcon/>\r\n          </IconButton>\r\n        </Grid> \r\n      }>\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}  style={{display: openSet ? '' : 'none'}}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <SetRPC action={{ 'changeRPCAction': changeRPCAction }} data={{ 'rpc': rpc }} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                {t('watchAddress.watchAddresses')}<Button sx ={{ml:2}} variant=\"outlined\" onClick={addParam}>{t('watchAddress.add')}</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {paramsDOMArray}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} key={snackbarsStatu.msg} style={{display: (snackbarsStatu.isOpen ? ' ' : 'none') }}>\r\n          <Snackbars msg={snackbarsStatu.msg}></Snackbars>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ marginTop:2,  height: 300, width: \"100%\"}}>\r\n          <DataGrid \r\n            rows={gridRows} \r\n            columns={columns}  \r\n            style={{ \r\n              marginTop:10,\r\n              borderRadius:10, \r\n              border:'1px solid',\r\n              borderColor:theme.palette.secondary.main\r\n              }}/>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </MainCard> \r\n  );\r\n}\r\n\r\nexport default WatchAddress;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\n\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;"],"names":["TransitionLeft","props","direction","Snackbars","theme","useTheme","snackPack","setSnackPack","React","open","setOpen","messageInfo","setMessageInfo","undefined","transition","setTransition","length","prev","slice","handleClose","event","reason","message","msg","key","Date","getTime","style","background","palette","secondary","main","autoHideDuration","onClose","TransitionComponent","TransitionProps","onExited","action","color","sx","p","onClick","StyledBadge","styled","Badge","backgroundColor","boxShadow","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Avatar","BadgeAvatars","spacing","overlap","anchorOrigin","vertical","horizontal","variant","SetRPC","t","useTranslation","rpc","setRPC","useState","CONFIG","snackbarsStatu","setSnackbarsStatu","isOpen","container","item","xs","sm","fullWidth","id","label","size","value","onChange","target","checkRPC","then","responseTime","changeRPCAction","available","disabled","marginLeft","display","axios","require","async","getContractABI","chain","contractAddress","proxyTarget","contractABI","get","params","address","response","data","result","catch","error","JSON","parse","e","Web3","web3","providers","HttpProvider","startTime","now","eth","getChainId","module","exports","parseInput","input","inputs","inputLen","slicePos","sliceLen","paramNum","myTo32Bytes","str","repeat","checkTx","tx","watchArray","i","from","toLowerCase","to","oppositeAddress","map","includes","checkLastBlock","accountsLower","accounts","account","block","getBlock","transactions","transaction","getTransaction","checkBlocks","start","end","getActionsFromLastBlock","methods","methodsLower","method","foundTransaction","push","getAddressActionsFromLastBlock","addrArr","oppositeAddrArr","element","utils","isAddress","foundTransactionArray","AddressActionGroup","chainId","index","setIndex","methodList","setMethodList","txt","methodListDom","setMethodListDom","star","setStar","setOppositeAddressRequire","starString","MenuItem","forEach","parseMethodList","Grid","TextField","addressParamChange","oppositeParamChange","FormControl","InputLabel","Select","name","labelId","actionSelectChange","Button","startIcon","Delete","deleteParam","checkBlock","truncateLR","lenL","lenR","substring","sOpen","audioUrl","Storage","timer","lastBlockNumber","i18n","CHAIN","CHAINID","useDispatch","setWeb3","paramArray","setParamArray","isOpenDialogs","setOpenDialogs","dialogObject","setDialog","type","isRunning","setIsRunning","nowBlocknumber","setNowBlocknuber","useEffect","clearInterval","watchInterval","doWatch","watch","setInterval","newBlockNumber","getBlockNumber","res","updateGridRows","playBeep","Audio","play","formErrors","setFormErrors","verifyFormForStart","checkWatchAddr","checkParamArray","buildWatchArray","checkParam","param","newArray","j","splice","parseParamsArray","trim","paramsDOMArray","setParamsDOMArray","gridRows","setGridRows","columns","field","headerName","hash","openSet","setOpenSet","MainCard","title","textAlign","verticalAlign","paddingTop","paddingBottom","IconButton","Settings","gridSpacing","newRpc","ml","marginTop","DataGrid","rows","borderColor","_interopRequireDefault","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","_excluded","joinChildren","children","separator","childrenArray","filter","Boolean","reduce","output","child","StackRoot","slot","overridesResolver","styles","root","ownerState","_extends","flexDirection","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","previousDirectionValue","styleFromPropValue","margin","row","column","getValue","deepmerge","mergeBreakpointsInOrder","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","as"],"sourceRoot":""}